<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter name="ModMenuExampleCode" type="System.Boolean" #>
<#@ parameter name="ModNamespace" type="System.String" #>
<#@ parameter name="AuthorID" type="System.String" #>
<#@ parameter name="AuthorName" type="System.String" #>
using UnityEngine;
using XLShredLib;
using XLShredLib.UI;

using System;
using System.Linq;

namespace <#= ModNamespace #> {

    class <#= ModNamespace #> : MonoBehaviour {

        private ModUIBox uiBox;


		/*
		========
		Insert mod fields
		========
		*/


 <# if (ModMenuExampleCode) { #>
		// Example Labels
		private ModUIlabel uiLabelTextExample;
        private ModUILabel uiLabelToggleExample;
		private ModUILabel uiLabelButtonExample;

 <# } #>
        public void Start() {

            uiBox = ModMenu.Instance.RegisterModMaker("<#= AuthorID #>", "<#= AuthorName #>");


			/*
			========
			Insert mod component setup
			========
			*/


 <# if (ModMenuExampleCode) { #>
			// Text Label Example
			uiLabelTextExample = uiBox.AddLabel("label-text-example", "A Text Label Example", Side side,
											() => true /* label visibility, can control with some logic if you like */, 
											int priority = 2 /* optional priority setting */)

			// Toggle Label Example
            uiLabelToggleExample = uiBox.AddLabel("label-toggle-example", LabelType.Toggle, "A Toggle Label Example", Side.right, 
													() => true /* label visibility, can control with some logic if you like */, 
													false /* initial toggle value, eg: Main.settings.someToggle */, 
													(b) => { /* store toggle value, eg: Main.settings.someToggle = b */ },
													int priority = 1 /* optional priority setting */);

			// Button Label Example
            uiLabelButtonExample = uiBox.AddLabel("label-button-example", LabelType.Button, "A Toggle Button Example", Side.right, 
													() => true /* label visibility, can control with some logic if you like */, 
													false /* initial toggle value, eg: Main.settings.someToggle */, 
													(b) => { /* perform action on click */ },
													int priority = 0 /* optional priority setting */);

			// Control Timescale Example (only include if you actually want to control that)
            ModMenu.Instance.RegisterTimeScaleTarget(Main.modId, () => {
                return 1.0f; // returns the target timescale.
            });

 <# } #>
        }

        public void Update() {
			
			
			/*
			========
			Ran every frame
			========
			*/

			
 <# if (ModMenuExampleCode) { #>
			// Control Setting with Controller Button
            if (PlayerController.Instance.inputController.player.GetButtonSinglePressDown("LB")) {

				/* You can toggle a setting / toggle label for example
				=======

                Main.settings.someToggle = !Main.settings.someToggle;
                uiLabelToggleExample.SetToggleValue(Main.settings.someToggle);

                if (Main.settings.someToggle) {
                    ModMenu.Instance.ShowMessage("Toggle Example: ON");
                } else {
                    ModMenu.Instance.ShowMessage("Toggle Example: OFF");
                }

				*/

				/* Or perform an action
				=======

				PlayerController.Instance.ForceBail(); // Force Character to Bail

				ModMenu.Instance.HideCursor(Main.modId); // hide cursor
				ModMenu.Instance.ShowCursor(Main.modId); // show cursor
					
				ModMenu.Instance.EnableMenuHide(Main.modId); // temporary menu hide
				ModMenu.Instance.DisableMenuHide(Main.modId); // disable temporary menu hide

				*/

            }

			// Control setting with Keypress
			ModMenu.Instance.KeyPress(KeyCode.X, 0.2f /* time buffer between presses */, () => {

				// Perform an action (same examples from controller button apply)

			});

 <# } #>
        }

		public void FixedUpdate() {
			
			
			/*
			========
			Ran every physics tick
			========
			*/

			
		}

        public void OnDestroy() {
			
			
			/*
			========
			Clean up component
			========
			*/

			
 <# if (ModMenuExampleCode) { #>
			// Remove labels from menu
			uiBox.RemoveLabel("label-text-example");
            uiBox.RemoveLabel("label-toggle-example");
			uiBox.RemoveLabel("label-button-example");

 <# } #>
		}

    }

}
